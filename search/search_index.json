{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Welcome to the plugin Documentation of PowerPlugins.net! It is our goal to provide a place, where plugin developers can provide a place for their plugin-wiki, free of charge! Why? Because we want to offer a good looking place for everyone to provide information. How to contribute \u00b6 If you know a plugin that doesn't have a wiki (yet) and you would like to provide one, head over to the Contributing page to find out how. Please also take a look at our Styling Guide to get an idea on how to properly format the site. If you need more information, do not hesitate to ask us on Discord or through E-Mail at support@powerplugins.net ! Have fun","title":"Welcome"},{"location":"#welcome","text":"Welcome to the plugin Documentation of PowerPlugins.net! It is our goal to provide a place, where plugin developers can provide a place for their plugin-wiki, free of charge! Why? Because we want to offer a good looking place for everyone to provide information.","title":"Welcome"},{"location":"#how-to-contribute","text":"If you know a plugin that doesn't have a wiki (yet) and you would like to provide one, head over to the Contributing page to find out how. Please also take a look at our Styling Guide to get an idea on how to properly format the site. If you need more information, do not hesitate to ask us on Discord or through E-Mail at support@powerplugins.net ! Have fun","title":"How to contribute"},{"location":"contributing/","text":"Contribute \u00b6 Do you want to add a plugin, which doesn't has a documentation yet? Here's a small guide on how to add it. Styling \u00b6 Before you start do we recommend to take a look at our Styling Guide to know all the details about what features we offer. Pages \u00b6 Each plugin has its own folder under the docs/plugins directory to allow them to have separate pages. You can create as many pages for your plugin as you want, as long as you keep it within the same folder ( plugins/<your-plugin> ). To prevent any possible formatting issues will you need to follow these important parts: Do not use any non-alphanummerical character in your folder or file name including spaces and underlines ( _ ). Use dashes ( - ) as replacement for spaces (So my plugin.md becomes my-plugin.md ) Names of folders and files have to be all lowercase. It's recommendet to create a index.md file which would be displayed first when connecting to the sub-page of the plugin ( /plugins/<your-plugin> ). Put any images you want to use for your plugin under the assets/img/plugins/ folder. Make sure to create a separate folder with the name of the plugin (while following point 1) to put all the images into. Adding pages to the mkdocs.yml \u00b6 Now that you've created your files is it time to actually add them to the mkdocs.yml file, to tell MkDocs, where you can find those pages. In the mkdocs.yml will you find a section called nav which acts as the navigation/list of MkDocs. To add your files, you first need to create a sub-directory under the Plugins one: nav : - Welcome : index.md - Contribute : - Contribute : contributing/index.md - Styling : contributing/styling-guide.md - Plugins : - Welcome : plugins/index.md # Imagine here to be any other plugins - Your Plugin : Note We would appreciate it, if you could keep it ordered by alphabet (0-9 first, followed by A-Z). Now that you have added it, is it time to add your pages. You can add them either by just providing the relative path ( - 'plugins/<your-plugin>/<page>.md' ) or by prefixing it with a name that would be displayed in the navigation on the left ( - The Page: plugins/<your-plugin>/<page>.md ). It's recommendet to name the pages, as you can use spaces and non-alphanummerical characters in it (Although last one isn't recommendet as it probably won't render well). If you've done everything should the nav section look something similar to this: nav : - Welcome : index.md - Contribute : - Contribute : contributing/index.md - Styling : contributing/styling-guide.md - Plugins : - Welcome : plugins/index.md # Imagine here to be any other plugins - Your Plugin : - Hello : plugins/your-plugin/index.md - About : plugins/your-plugin/about.md Create a Pull Request \u00b6 You can now create a Pull Request towards the Plugin-Docs repository to get it added (if everything is alright). Styling suggestions \u00b6 Here are some styling suggestions for the files to keep them organized and simple Reference links \u00b6 It's highly recommendet to use a reference link in your file. Reference links are links prefixed by a text within square brackets. (Example: [text]: https://url.tld ) These kind of links have some benefits: You only need to update a single instance of the URL and don't have to go through each one separately. You just need to provide [text] and Markdown will translate it to text containing the link. You can keep the links at a single place (i.e. on top of the page) for easier managing and updating. Image links \u00b6 You can upload images to the repository, by creating a folder named after the plugin under the assets/img/plugins/ directory. After you've uploaded your images can you reference them like this: ![image](/assets/img/plugins/<your-plugin>/<image>.<type>) Please make sure to upload the images as either .gif or .jpg to save resources and storage space. You're allowed to use external sites for the images and use the respective URLs for them, but keep in mind that we might deny your PR if it uses a sketchy website for images. Below can you find a list of trusted sites for uploading and sharing images and gifs. Trusted sites Note that this is by no means a complete list and that it might get updated from time to time. Imgur - Supports images and gifs. GfyCat - For gifs. Use the \"gifs\" share-option.","title":"Contribute"},{"location":"contributing/#contribute","text":"Do you want to add a plugin, which doesn't has a documentation yet? Here's a small guide on how to add it.","title":"Contribute"},{"location":"contributing/#styling","text":"Before you start do we recommend to take a look at our Styling Guide to know all the details about what features we offer.","title":"Styling"},{"location":"contributing/#pages","text":"Each plugin has its own folder under the docs/plugins directory to allow them to have separate pages. You can create as many pages for your plugin as you want, as long as you keep it within the same folder ( plugins/<your-plugin> ). To prevent any possible formatting issues will you need to follow these important parts: Do not use any non-alphanummerical character in your folder or file name including spaces and underlines ( _ ). Use dashes ( - ) as replacement for spaces (So my plugin.md becomes my-plugin.md ) Names of folders and files have to be all lowercase. It's recommendet to create a index.md file which would be displayed first when connecting to the sub-page of the plugin ( /plugins/<your-plugin> ). Put any images you want to use for your plugin under the assets/img/plugins/ folder. Make sure to create a separate folder with the name of the plugin (while following point 1) to put all the images into.","title":"Pages"},{"location":"contributing/#adding-pages-to-the-mkdocsyml","text":"Now that you've created your files is it time to actually add them to the mkdocs.yml file, to tell MkDocs, where you can find those pages. In the mkdocs.yml will you find a section called nav which acts as the navigation/list of MkDocs. To add your files, you first need to create a sub-directory under the Plugins one: nav : - Welcome : index.md - Contribute : - Contribute : contributing/index.md - Styling : contributing/styling-guide.md - Plugins : - Welcome : plugins/index.md # Imagine here to be any other plugins - Your Plugin : Note We would appreciate it, if you could keep it ordered by alphabet (0-9 first, followed by A-Z). Now that you have added it, is it time to add your pages. You can add them either by just providing the relative path ( - 'plugins/<your-plugin>/<page>.md' ) or by prefixing it with a name that would be displayed in the navigation on the left ( - The Page: plugins/<your-plugin>/<page>.md ). It's recommendet to name the pages, as you can use spaces and non-alphanummerical characters in it (Although last one isn't recommendet as it probably won't render well). If you've done everything should the nav section look something similar to this: nav : - Welcome : index.md - Contribute : - Contribute : contributing/index.md - Styling : contributing/styling-guide.md - Plugins : - Welcome : plugins/index.md # Imagine here to be any other plugins - Your Plugin : - Hello : plugins/your-plugin/index.md - About : plugins/your-plugin/about.md","title":"Adding pages to the mkdocs.yml"},{"location":"contributing/#create-a-pull-request","text":"You can now create a Pull Request towards the Plugin-Docs repository to get it added (if everything is alright).","title":"Create a Pull Request"},{"location":"contributing/#styling-suggestions","text":"Here are some styling suggestions for the files to keep them organized and simple","title":"Styling suggestions"},{"location":"contributing/#reference-links","text":"It's highly recommendet to use a reference link in your file. Reference links are links prefixed by a text within square brackets. (Example: [text]: https://url.tld ) These kind of links have some benefits: You only need to update a single instance of the URL and don't have to go through each one separately. You just need to provide [text] and Markdown will translate it to text containing the link. You can keep the links at a single place (i.e. on top of the page) for easier managing and updating.","title":"Reference links"},{"location":"contributing/#image-links","text":"You can upload images to the repository, by creating a folder named after the plugin under the assets/img/plugins/ directory. After you've uploaded your images can you reference them like this: ![image](/assets/img/plugins/<your-plugin>/<image>.<type>) Please make sure to upload the images as either .gif or .jpg to save resources and storage space. You're allowed to use external sites for the images and use the respective URLs for them, but keep in mind that we might deny your PR if it uses a sketchy website for images. Below can you find a list of trusted sites for uploading and sharing images and gifs. Trusted sites Note that this is by no means a complete list and that it might get updated from time to time. Imgur - Supports images and gifs. GfyCat - For gifs. Use the \"gifs\" share-option.","title":"Image links"},{"location":"contributing/styling-guide/","text":"Styling Guide \u00b6 We use MkDocs in combination with the Material Theme and the PyMdown extension to provide these docs. MkDocs uses Markdown for the pages, which are rendered into static HTML pages when build. This markdown is mostly similar to the one you may already know from places like GitHub or Discord, but has some minor differences and also some additional features. Lists \u00b6 Unordered and ordered lists have a slightly different formatting than the one you're probably used to. In order for the list to work will they require an empty line between the list, and any displayed text above them. List example Markdown This list below will work. - Entry 1 - Entry 2 - Entry 3 ---- This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 Result This list below will work. Entry 1 Entry 2 Entry 3 This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 In addition to the above requirement will you also need to use 4 spaces compared to the usual 2, when you want to indent the list. Indent example Markdown Working indents: - Entry 1 - Entry 1.1 - Entry 2 ---- Not working indents: - Entry 1 - Entry 1.1 - Entry 2 Result Working indents: Entry 1 Entry 1.1 Entry 2 Not working indents: Entry 1 Entry 1.1 Entry 2 Info boxes \u00b6 You sure have noticed those neat looking boxes that contain various information of stuff. Those are provided through MkDocs and use a specific syntax, that you need to follow. Box examples Markdown !!! info \"Title\" Rules about Markdown still apply. - F.e. Lists - Still need an empty line ---- !!! info The title can be omited. The box will then use the name of its type. Result Title Rules about Markdown still apply. F.e. Lists Still need an empty line Info The title can be omited. The box will then use the name of its type. I want to point out those specific things: You don't need to add two spaces after the !!! <type> \"<title>\" . MkDocs can handle this just fine. You need to add at least one empty line before and after the info box to not have unwanted formatting issues. Types \u00b6 The info boxes have various types available which you can choose from: Note Summary Info Tip Success Question Warning Failure Danger Bug Example Quote Collapsable info boxes (Details) \u00b6 This feature requires the Details extension from PyMdown . Those boxes are similar to the normal info boxes, but can be collapsed (closed) or opened. They follow the same syntax as the info boxes, but use question marks ( ? ) instead of exclamation marks ( ! ). You can use the exact same types as with the info boxes. Collapsable Box example Markdown ??? info \"Title\" This box is closed by default ---- ???+ info \"Title\" Adding a + after the question mark makes this box open by default. Result Title This box is closed by default Title Adding a + after the question mark makes this box open by default. Tabs \u00b6 This feature requires the Tabbed extension from PyMdown . Adds tabbed Markdown to list content after each other. This was used here for the various Markdown examples and their results. The syntax is the same as with the info box, with the difference that it uses equal signs ( = ) instead of exclamation marks ( ! ). Additionally does it also not have a type parameter, meaning you can only set the tile itself. Tabs example Markdown === \"Tab 1\" You can add more tabs... === \"Tab 2\" ...by adding extra `===`. ===! \"Tab A\" Using a ! after the equal signs... === \"Tab B\" ...indicates a new set of tabs. Result Tab 1 You can add more tabs... Tab 2 ...by adding extra === . Tab A Using a ! after the equal signs... Tab B ...indicates a new set of tabs. Links \u00b6 We use the PyMdown extension MagicLink which allows us to automatically transform links into clickable links. This doesn't happen by default. Link example Markdown https://powerplugins.net Result https://powerplugins.net Additionally can we link to a repository or GitHub user by just using the format @user/repo and @user respectively. This also works with Twitter-users by prefixing the name with twitter: ( @twitter:username ) Mention examples Markdown @PowerPlugins @PowerPlugins/Plugin-Docs @twitter:TrueAndre_601 Result @PowerPlugins PowerPlugins/Plugin-Docs @TrueAndre_601 Final Words \u00b6 Those are all the important parts you need to know about the markdown syntax for those documentations. Every other markdown format that wasn't mentioned here uses the default, most commonly known syntax (e.g. *italic* is italic , **bold** is botld , etc.)","title":"Styling"},{"location":"contributing/styling-guide/#styling-guide","text":"We use MkDocs in combination with the Material Theme and the PyMdown extension to provide these docs. MkDocs uses Markdown for the pages, which are rendered into static HTML pages when build. This markdown is mostly similar to the one you may already know from places like GitHub or Discord, but has some minor differences and also some additional features.","title":"Styling Guide"},{"location":"contributing/styling-guide/#lists","text":"Unordered and ordered lists have a slightly different formatting than the one you're probably used to. In order for the list to work will they require an empty line between the list, and any displayed text above them. List example Markdown This list below will work. - Entry 1 - Entry 2 - Entry 3 ---- This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 Result This list below will work. Entry 1 Entry 2 Entry 3 This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 In addition to the above requirement will you also need to use 4 spaces compared to the usual 2, when you want to indent the list. Indent example Markdown Working indents: - Entry 1 - Entry 1.1 - Entry 2 ---- Not working indents: - Entry 1 - Entry 1.1 - Entry 2 Result Working indents: Entry 1 Entry 1.1 Entry 2 Not working indents: Entry 1 Entry 1.1 Entry 2","title":"Lists"},{"location":"contributing/styling-guide/#info-boxes","text":"You sure have noticed those neat looking boxes that contain various information of stuff. Those are provided through MkDocs and use a specific syntax, that you need to follow. Box examples Markdown !!! info \"Title\" Rules about Markdown still apply. - F.e. Lists - Still need an empty line ---- !!! info The title can be omited. The box will then use the name of its type. Result Title Rules about Markdown still apply. F.e. Lists Still need an empty line Info The title can be omited. The box will then use the name of its type. I want to point out those specific things: You don't need to add two spaces after the !!! <type> \"<title>\" . MkDocs can handle this just fine. You need to add at least one empty line before and after the info box to not have unwanted formatting issues.","title":"Info boxes"},{"location":"contributing/styling-guide/#types","text":"The info boxes have various types available which you can choose from: Note Summary Info Tip Success Question Warning Failure Danger Bug Example Quote","title":"Types"},{"location":"contributing/styling-guide/#collapsable-info-boxes-details","text":"This feature requires the Details extension from PyMdown . Those boxes are similar to the normal info boxes, but can be collapsed (closed) or opened. They follow the same syntax as the info boxes, but use question marks ( ? ) instead of exclamation marks ( ! ). You can use the exact same types as with the info boxes. Collapsable Box example Markdown ??? info \"Title\" This box is closed by default ---- ???+ info \"Title\" Adding a + after the question mark makes this box open by default. Result Title This box is closed by default Title Adding a + after the question mark makes this box open by default.","title":"Collapsable info boxes (Details)"},{"location":"contributing/styling-guide/#tabs","text":"This feature requires the Tabbed extension from PyMdown . Adds tabbed Markdown to list content after each other. This was used here for the various Markdown examples and their results. The syntax is the same as with the info box, with the difference that it uses equal signs ( = ) instead of exclamation marks ( ! ). Additionally does it also not have a type parameter, meaning you can only set the tile itself. Tabs example Markdown === \"Tab 1\" You can add more tabs... === \"Tab 2\" ...by adding extra `===`. ===! \"Tab A\" Using a ! after the equal signs... === \"Tab B\" ...indicates a new set of tabs. Result Tab 1 You can add more tabs... Tab 2 ...by adding extra === . Tab A Using a ! after the equal signs... Tab B ...indicates a new set of tabs.","title":"Tabs"},{"location":"contributing/styling-guide/#links","text":"We use the PyMdown extension MagicLink which allows us to automatically transform links into clickable links. This doesn't happen by default. Link example Markdown https://powerplugins.net Result https://powerplugins.net Additionally can we link to a repository or GitHub user by just using the format @user/repo and @user respectively. This also works with Twitter-users by prefixing the name with twitter: ( @twitter:username ) Mention examples Markdown @PowerPlugins @PowerPlugins/Plugin-Docs @twitter:TrueAndre_601 Result @PowerPlugins PowerPlugins/Plugin-Docs @TrueAndre_601","title":"Links"},{"location":"contributing/styling-guide/#final-words","text":"Those are all the important parts you need to know about the markdown syntax for those documentations. Every other markdown format that wasn't mentioned here uses the default, most commonly known syntax (e.g. *italic* is italic , **bold** is botld , etc.)","title":"Final Words"},{"location":"plugins/","text":"Welcome \u00b6 Welcome to the plugins section! This part contains the wikis of various plugins, being it premium or free plugins. Plugins \u00b6","title":"Welcome"},{"location":"plugins/#welcome","text":"Welcome to the plugins section! This part contains the wikis of various plugins, being it premium or free plugins.","title":"Welcome"},{"location":"plugins/#plugins","text":"","title":"Plugins"}]}